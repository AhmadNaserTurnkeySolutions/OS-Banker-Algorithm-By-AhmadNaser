package bankersproject;


import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Graphics;
import java.awt.GraphicsDevice;
import java.awt.GraphicsEnvironment;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.Window;
import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.tree.DefaultTreeCellEditor.DefaultTextField;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * GUIDriver.java
 *
 * Created on Nov 14, 2012, 4:05:17 PM
 */
/**
 *
 * @author inspiron
 */
public class MainFrame extends javax.swing.JFrame {

    private Bank bank;
    JTextField [] TextFiledArrayForAvailable;
    JTextField[][]AllocateTextFileArray;
    JTextField [][] MaxTextFiledArray;
    JLabel [] LabelsArray; 
    int CustomersNumber;
    int ResoursesNumber;
    int HeightSize=1;
    int WidthSize=1;
     static int safe[]=new int[20];
 static boolean safety(int a[],int al[][],int need[][],int n1,int m1)
 {
	int n=n1;
	int m=m1;
	int nd[][]=new int[n][m];
	int work[]=new int[m];
	int all[][]=new int[n][m];
	
	for(int i=0;i<m;i++)
	work[i]=a[i];

	for(int i=0;i<n;i++)
	for(int j=0;j<m;j++)
	all[i][j]=al[i][j];

	for(int i=0;i<n;i++)
	for(int j=0;j<m;j++)
	nd[i][j]=need[i][j];

	boolean fin[]=new boolean[n];

	for(int i=0;i<n;i++)
	fin[i]=false;

	int check=0;
	int check1=0;
	
	do
	{
		for(int i=0;i<n;i++)
		{
		boolean flag=true;
		if(fin[i]==false)
		{
		 for(int j=0;j<m;j++)
		{if(work[j]<nd[i][j])
		 flag=false;
		}
		if(flag)
		{
		 for(int j=0;j<m;j++)
		work[j]+=all[i][j];
		safe[check]=i;
		check++;
		fin[i]=true;
		}
		}	
			
		}
	
		check1++;
	}while(check<n && check1<n);


	if(check>n)
	return false;
	else 
	return true;
	
	

 }

static boolean reqFunc(int a[],int al[][],int need[][],int req[],int pid,int n1,int m1)
{
 int n=n1;
 int m=m1;
 
 int avail[]=new int[m];
int alloc[][]=new int[n][m];
int need1[][]=new int[n][m];
int req1[]=new int[m];
int r=pid;

       for(int i=0;i<m;i++)
	req1[i]=req[i];

	for(int i=0;i<m;i++)
	avail[i]=a[i];
	
        for(int i=0;i<n;i++)
	for(int j=0;j<m;j++)
	alloc[i][j]=al[i][j];

	for(int i=0;i<n;i++)
	for(int j=0;j<m;j++)
	need1[i][j]=need[i][j];

	boolean flag=true;
	for(int i=0;i<m;i++)
	{
	if(need1[r][i]<req1[i])
	flag=false;
	}

	if(flag)
	{
	for(int i=0;i<m;i++)
	if(avail[i]<req1[i])
	flag=false;
	
	if(flag)
	{
	for(int i=0;i<m;i++)
	{
	alloc[r][i]+=req1[i];
	need1[r][i]-=req1[i];
	avail[i]-=req1[i];
	}
	
	if(safety(avail,alloc,need1,n,m))
	return true;
	else
	System.out.println("It leads to deadlock ,so request can't be granted");
	}
	else
	System.out.println("process p"+r+"should wait");
	}
	else
	System.out.println("Error:process exceeding Limit");
	return false;

	
}
    /** Creates new form GUIDriver */
    public MainFrame() {
        initComponents();
        fullScreen();
         this.imagePanel1.setImage(new ImageIcon(this.getClass().getResource("back2.jpg")).getImage());
         
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        imagePanel1 = new gui.ImagePanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        p3 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        p2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        p1 = new javax.swing.JPanel();
        btn_InsertCusomersAndResoursesNumber = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        exit = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        lbl_Result = new javax.swing.JLabel();
        exit1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setFocusCycleRoot(false);
        setResizable(false);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, java.awt.Color.darkGray, java.awt.Color.lightGray));

        p3.setBackground(new java.awt.Color(255, 255, 255));
        p3.setBorder(javax.swing.BorderFactory.createTitledBorder("Customer Allocated"));
        p3.setPreferredSize(new java.awt.Dimension(600, 340));

        javax.swing.GroupLayout p3Layout = new javax.swing.GroupLayout(p3);
        p3.setLayout(p3Layout);
        p3Layout.setHorizontalGroup(
            p3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 588, Short.MAX_VALUE)
        );
        p3Layout.setVerticalGroup(
            p3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 313, Short.MAX_VALUE)
        );

        jScrollPane3.setViewportView(p3);

        p2.setBackground(new java.awt.Color(255, 255, 255));
        p2.setBorder(javax.swing.BorderFactory.createTitledBorder("Resources Instances"));
        p2.setAutoscrolls(true);
        p2.setMaximumSize(new java.awt.Dimension(400, 100));

        javax.swing.GroupLayout p2Layout = new javax.swing.GroupLayout(p2);
        p2.setLayout(p2Layout);
        p2Layout.setHorizontalGroup(
            p2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1097, Short.MAX_VALUE)
        );
        p2Layout.setVerticalGroup(
            p2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 164, Short.MAX_VALUE)
        );

        jScrollPane4.setViewportView(p2);

        jScrollPane1.setPreferredSize(new java.awt.Dimension(100, 100));

        p1.setBackground(new java.awt.Color(255, 255, 255));
        p1.setBorder(javax.swing.BorderFactory.createTitledBorder("Customers Maximmum Demand"));
        p1.setPreferredSize(new java.awt.Dimension(600, 340));

        javax.swing.GroupLayout p1Layout = new javax.swing.GroupLayout(p1);
        p1.setLayout(p1Layout);
        p1Layout.setHorizontalGroup(
            p1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 588, Short.MAX_VALUE)
        );
        p1Layout.setVerticalGroup(
            p1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 313, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(p1);
        p1.getAccessibleContext().setAccessibleName("Customers Maximmum");

        btn_InsertCusomersAndResoursesNumber.setText("Check");
        btn_InsertCusomersAndResoursesNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_InsertCusomersAndResoursesNumberActionPerformed(evt);
            }
        });

        jButton3.setText("Reset");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton2.setText("Minimize");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        exit.setText("Exit");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        jLabel3.setText("Result :");

        exit1.setText("# Customers");
        exit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exit1ActionPerformed(evt);
            }
        });

        jButton4.setText("# Resources");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Import");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout imagePanel1Layout = new javax.swing.GroupLayout(imagePanel1);
        imagePanel1.setLayout(imagePanel1Layout);
        imagePanel1Layout.setHorizontalGroup(
            imagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, imagePanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(imagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 1106, Short.MAX_VALUE)
                    .addGroup(imagePanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 486, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 610, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, imagePanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(35, 35, 35)
                        .addComponent(lbl_Result, javax.swing.GroupLayout.PREFERRED_SIZE, 839, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(22, 22, 22)
                .addGroup(imagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btn_InsertCusomersAndResoursesNumber, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(exit1, 0, 0, Short.MAX_VALUE)
                    .addComponent(jButton4, 0, 0, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(exit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        imagePanel1Layout.setVerticalGroup(
            imagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, imagePanel1Layout.createSequentialGroup()
                .addGroup(imagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, imagePanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(exit1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5)
                        .addGap(14, 14, 14)
                        .addComponent(btn_InsertCusomersAndResoursesNumber)
                        .addGap(18, 18, 18)
                        .addComponent(exit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2)
                        .addGap(34, 34, 34))
                    .addGroup(imagePanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(imagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 340, Short.MAX_VALUE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 340, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(imagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(lbl_Result, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(imagePanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(imagePanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("tab2", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1079, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE)
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("tab1\ntab2");

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
    System.exit(0);
    // TODO add your handling code here:
}//GEN-LAST:event_exitActionPerformed

private void btn_InsertCusomersAndResoursesNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_InsertCusomersAndResoursesNumberActionPerformed


         int n=this.CustomersNumber;
         int m=this.ResoursesNumber;
        	//	int maximum [][]= new int[][]{{0,0,1,2},{2,7,5,0},{6,6,5,6},{4,3,5,6},{0,6,5,2}};//new int[NUMBER_OF_CUSTOMERS][];
		//int allocation[][] = new int[][]{{0,0,1,2},{2,0,0,0},{0,0,3,4},{2,3,5,5},{0,3,3,2}};//new int[NUMBER_OF_CUSTOMERS][];
        
	int a[]=new int[ResoursesNumber];
            for(int i=0;i<ResoursesNumber;i++){
        a[i]=Integer.parseInt(TextFiledArrayForAvailable[i].getText());
                }
	for(int i=0;i<m;i++)
	{
	// System.out.println("enter no. of available instances resources:"+i);
	 //a[i]=//Integer.parseInt(obj.readLine());
	
	}
	
	System.out.println("enter allocation of resources:");
	int al[][]=new int[n][m];
	for(int i=0;i<n;i++)
	for(int j=0;j<m;j++)
	{
System.out.println("enter allocation instances of resources:"+j+"for Customer p"+i);	

	al[i][j]=Integer.parseInt(AllocateTextFileArray[i][j].getText());//Integer.parseInt(obj.readLine());
	  //  JTextField[][]AllocateTextFileArray;
   
	}

System.out.println("enter maximum of resources:");
	int max[][]=new int[n][m];
	for(int i=0;i<n;i++)
	for(int j=0;j<m;j++)
	{
System.out.println("enter max instances of resources:"+j+"for Customer p"+i);	
	max[i][j]=Integer.parseInt(MaxTextFiledArray[i][j].getText());
	
	
	}


	int need[][]=new int[n][m];
        String s="";
	for(int i=0;i<n;i++){
            
	for(int j=0;j<m;j++)
	{
	
	need[i][j]=max[i][j]-al[i][j];
	 s+=need[i][j]+" ";
	}
        s+="\n";
        }
        JOptionPane.showMessageDialog(null, "Need\n"+s);
	
	if(safety(a,al,need,n,m))
	{
            String x1=" System in Safe State \n";
          
	 System.out.println(" System in Safe State ");
         x1+=" System's Safe sequence: ";
	System.out.println("System's Safe sequence: ");
	for(int i=0;i<n;i++){
            x1+=safe[i]+" ";
	System.out.println("Customer "+safe[i]+" ");
        }
         this.lbl_Result.setText(x1);
	}

        else{
	System.out.println("System in UnSafe State");
          this.lbl_Result.setText("System in UnSafe State");
        }
if(JOptionPane.showConfirmDialog(null, "do u wanna to hav a request for any process,then enter Customer no. and Requesting resources")==JOptionPane.OK_OPTION){
	System.out.println("do u wanna to hav a request for any process,then enter Customer no. and Requesting resources");
	int pid=Integer.parseInt(JOptionPane.showInputDialog("do u wanna to hav a request for any process,then enter Customer no. and Requesting resources"));
	int req[]=new int[m];
	for(int i=0;i<m;i++)
	req[i]=Integer.parseInt(JOptionPane.showInputDialog("Resource "+i));
	if(reqFunc(a,al,need,req,pid,n,m))
	{
            String x2="";
	System.out.println("request can be granted");
        x2=" request can be granted ";
       
	for(int i=0;i<m;i++)
	{al[pid][i]+=req[i];
	need[pid][i]-=req[i];
	a[i]-=req[i];

	}
        if(safety(a,al,need,n,m))
	{
            x2+=" , System in Safe State\nSystem's Safe sequence: ";
	System.out.println("System in Safe State");
	System.out.println("System's Safe sequence:");
	for(int i=0;i<n;i++){
	System.out.println(safe[i]+" ");
        x2+=safe[i]+" ";
                }
         this.lbl_Result.setText(x2);
	}
        else{
	System.out.println("System in UnSafe State");
         this.lbl_Result.setText(" System in UnSafe State ");
        }
	}
}
	    
}//GEN-LAST:event_btn_InsertCusomersAndResoursesNumberActionPerformed

private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
// TODO add your handling code here:
    this.setState(1);
}//GEN-LAST:event_jButton2ActionPerformed

private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        p2.removeAll();
    p1.removeAll();
    p3.removeAll();
}//GEN-LAST:event_jButton3ActionPerformed

private void exit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exit1ActionPerformed
// TODO add your handling code here:
    this.CustomersNumber=Integer.parseInt(JOptionPane.showInputDialog("Enter Number Of Customers"));
}//GEN-LAST:event_exit1ActionPerformed

private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
// TODO add your handling code here:
      this.ResoursesNumber=Integer.parseInt(JOptionPane.showInputDialog("Enter Number Of Resources"));
}//GEN-LAST:event_jButton4ActionPerformed

private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
// TODO add your handling code here:
        
                        JFileChooser jf=new JFileChooser(".");
                jf.showOpenDialog(null);
             

		// get the name of the input file	
   File f1=jf.getSelectedFile();
   
                           JFileChooser jf2=new JFileChooser(".");
                jf2.showOpenDialog(null);
             

		// get the name of the input file	
   File f2=jf2.getSelectedFile();
   
   String s1="";
   String s2="";
   try{
  // Open the file that is the first 
  // command line parameter
  FileInputStream fstream = new FileInputStream(f1);
  // Get the object of DataInputStream
  DataInputStream in = new DataInputStream(fstream);
  BufferedReader br = new BufferedReader(new InputStreamReader(in));
  String strLine;
  //Read File Line By Line
  while ((strLine = br.readLine()) != null)   {
  // Print the content on the console
  s1+=strLine;
  }
  //Close the input stream
  in.close();
    }catch (Exception e){//Catch exception if any
  System.err.println("Error: " + e.getMessage());
  }
   
   
      try{
  // Open the file that is the first 
  // command line parameter
  FileInputStream fstream = new FileInputStream(f2);
  // Get the object of DataInputStream
  DataInputStream in = new DataInputStream(fstream);
  BufferedReader br = new BufferedReader(new InputStreamReader(in));
  String strLine;
  //Read File Line By Line
  while ((strLine = br.readLine()) != null)   {
  // Print the content on the console
  s2+=strLine;
  }
  //Close the input stream
  in.close();
    }catch (Exception e){//Catch exception if any
  System.err.println("Error: " + e.getMessage());
  }
   
   JOptionPane.showMessageDialog(null, s1+"\n"+s2);
   
   
   
   
   
   String m[]=s1.split(",");
   String a[]=s2.split(",");
    int max[]=new int[m.length];
              int alloc[]=new int[a.length];
   for(int i=0;i<m.length;i++)
   {
   max[i]=Integer.parseInt(m[i]);
   }
      for(int i=0;i<m.length;i++)
   {
  alloc[i]=Integer.parseInt(a[i]);
   }
  //    =//{0,0,1,2,2,7,5,0,6,6,5,6,4,3,5,6,0,6,5,2};
//    int alloc[]=//{0,0,1,2,2,0,0,0,0,0,3,4,2,3,5,5,0,3,3,2};
    int numOfCustomer=this.CustomersNumber;
      int numOfProcesses=this.ResoursesNumber;
     // txt_ResoursesNumber.setText(numOfProcesses+"");
    //CustomersNumber=Integer.parseInt(txt_CustomersNumber.getText().toString());
   // ResoursesNumber=Integer.parseInt(txt_ResoursesNumber.getText().toString());
    for(int i=0;i<numOfCustomer;i++)
    {
    for(int j=0;j<numOfProcesses;j++)
    {
    fill((i+1),(j+1));
    }
    }
    int count=0;
        for(int i=0;i<numOfCustomer;i++)
    {
    for(int j=0;j<numOfProcesses;j++)
    {
    AllocateTextFileArray[i][j].setText(alloc[count]+"");
    MaxTextFiledArray[i][j].setText(max[count]+"");
  
    count++;
    }
    }
}//GEN-LAST:event_jButton5ActionPerformed

public void fill(int CustomersNumber ,int ResoursesNumber)
{
        p2.removeAll();
    p1.removeAll();
    p3.removeAll();
    TextFiledArrayForAvailable=new JTextField[ResoursesNumber];
    MaxTextFiledArray=new JTextField[CustomersNumber][ResoursesNumber];
    LabelsArray=new JLabel[CustomersNumber]; 
    JLabel customer_label=new JLabel("Customer#");
    JLabel customer_label2=new JLabel("Customer#");
    JLabel max_label=new JLabel("maximum demand");
    JLabel all_label=new JLabel("Allocated");
    p2.setLayout(null);
    p2.setSize(600, 340);
    p1.setLayout(null);
    p1.setSize(926,108);

    Insets s2 =p2.getInsets();
    Dimension size4;
    int x=5;
    int y=10;
    for(int i=0;i<ResoursesNumber;i++){
        TextFiledArrayForAvailable[i]=new JTextField();
        size4=TextFiledArrayForAvailable[i].getPreferredSize();
        TextFiledArrayForAvailable[i].setBounds(x+s2.left, y+s2.top, size4.width+15, size4.height);
        p2.add(TextFiledArrayForAvailable[i]);
        x+=35;
    }
 
    x=5;
    y=10;
    Insets s =p1.getInsets();
    Dimension size2=customer_label.getPreferredSize();
    customer_label.setBounds(x+s.left,y+s.top,size2.width,size2.height);
    Dimension size3=max_label.getPreferredSize();
    max_label.setBounds(x+s.left+80, y+s.top,size3.width , size3.height);
    p1.add(customer_label);
    p1.add(max_label);
    x=size2.width/2;
    y=50;
    for(int i=0;i<LabelsArray.length;i++){
        Dimension size;
        LabelsArray[i]=new JLabel();
        LabelsArray[i].setText(String.valueOf(i));
        size=LabelsArray[i].getPreferredSize();
        LabelsArray[i].setBounds(x+s.left, y+s.top,size.width+10 ,size.height );
        p1.add(LabelsArray[i]);
        y+=35;
    }
    y=45;
   
    for(int i=0;i<CustomersNumber;i++){
         x=85;
        for(int j=0;j<ResoursesNumber;j++){
            
        
        Dimension size;
        MaxTextFiledArray[i][j]=new JTextField();
        size=MaxTextFiledArray[i][j].getPreferredSize();
        MaxTextFiledArray[i][j].setBounds(x+s.left, y+s.top, size.width+15, size.height);
      //  x+=25;
          x+=30;
        p1.add(MaxTextFiledArray[i][j]);
      //   frame2.add(TextFiledArray[i]);
        }
        y+=35;
      
    }
    int w=600+s.left+s.right;
    int h=340+s.top+s.bottom;
    HeightSize=(CustomersNumber/6)+1;
    p1.setSize(w,h);
    int w2=926+s2.left+s2.right;
    int h2=108+s2.top+s2.bottom;
  
    p2.setSize(w2, h2);
   
        
    
     
    p3.setLayout(null);
   // p3.setSize(600, 340);
     p3.setSize(60, 340);
   
  
    Insets s3 =p3.getInsets();
    AllocateTextFileArray=new JTextField[CustomersNumber][ResoursesNumber];

    x=5;
    y=10;

    Dimension size_c=customer_label2.getPreferredSize();
    customer_label2.setBounds(x+s3.left,y+s3.top,size_c.width,size_c.height);
    Dimension size_all=all_label.getPreferredSize();
    all_label.setBounds(x+s3.left+80, y+s3.top,size_all.width , size_all.height);
    p3.add(customer_label2);
    p3.add(all_label);
   // x=size_all.width/2;
    x=size_c.width/2;
    y=50;
     
    for(int i=0;i<LabelsArray.length;i++){
        Dimension size;
        LabelsArray[i]=new JLabel();
        LabelsArray[i].setText(String.valueOf(i));
        size=LabelsArray[i].getPreferredSize();
        LabelsArray[i].setBounds(x+s3.left, y+s3.top,size.width+10 ,size.height );
        p3.add(LabelsArray[i]);
        y+=35;
    }
    
   //  x=25;
    y=50;
    for(int i=0;i<CustomersNumber;i++){
        x=80;
        for(int j=0;j<ResoursesNumber;j++){
        Dimension size;
        AllocateTextFileArray[i][j]=new JTextField();
        size=AllocateTextFileArray[i][j].getPreferredSize();
        AllocateTextFileArray[i][j].setBounds(x+s3.left, y+s3.top, size.width+15, size.height);
          x+=30;
        p3.add(AllocateTextFileArray[i][j]);
        }
        y+=30;
    }
 //   int w3=600+s3.left+s3.right;
  //  int h3=340+s3.top+s3.bottom;
    p3.setSize(0,0);
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                MainFrame frame=new MainFrame();
                frame.setVisible(true);
                frame.setDefaultCloseOperation(EXIT_ON_CLOSE);
            }
        });
    }
    
          public void fullScreen(){
        GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
        GraphicsDevice gs = ge.getDefaultScreenDevice();
        Window win = new Window(this);//add jframe to window component
    win.setBackground(Color.black);
  //  this.imagePanel1.setBackground(Color.black);
     this.setBackground(Color.black);
      win.add(this.jPanel2,BorderLayout.CENTER);
       
     //    win.add(this.imagePanel1,BorderLayout.CENTER);
        //this.imagePanel1.setImage(new ImageIcon(this.getClass().getResource("BACKF.jpg")).getImage());
      //        this.imagePanel2.setImage(new ImageIcon(this.getClass().getResource("BACKt.jpg")).getImage());
        //        this.HashPanel.setImage(new ImageIcon(this.getClass().getResource("BACKF.jpg")).getImage());
        win.validate();
        
        gs.setFullScreenWindow(win);
 
             
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_InsertCusomersAndResoursesNumber;
    private javax.swing.JButton exit;
    private javax.swing.JButton exit1;
    private gui.ImagePanel imagePanel1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lbl_Result;
    private javax.swing.JPanel p1;
    private javax.swing.JPanel p2;
    private javax.swing.JPanel p3;
    // End of variables declaration//GEN-END:variables

    private void test() {
        //
    int [] available=new int[8];
    for(int i=0;i<TextFiledArrayForAvailable.length;i++){
        available[i]=Integer.parseInt(TextFiledArrayForAvailable[i].getText().toString());
    }
    bank=new BankImpl(available);
   // bank.getState();
    for(int i=0;i<MaxTextFiledArray.length;i++){
        int [] maxNeed=new int[MaxTextFiledArray[i].length];
        for(int j=0;j<MaxTextFiledArray[i].length;j++){
            maxNeed[j]=Integer.parseInt(MaxTextFiledArray[i][j].getText().toString());
        }
         bank.addCustomer(i, maxNeed);
         
    }
   // bank.getState();
  
     int [][] AllocateArray=new int[AllocateTextFileArray.length][AllocateTextFileArray[0].length];
    for(int i=0;i<AllocateArray.length;i++){
        for(int j=0;j<AllocateArray[i].length;j++){
            AllocateArray[i][j]=Integer.parseInt(AllocateTextFileArray[i][j].getText().toString());
        }
          bank.requestResources(i, AllocateArray[i]);
    }
  bank.getState();
    String s="";
   boolean [] finish=new boolean[CustomersNumber];
    for(int i=0;i<finish.length;i++)
        finish[i]=false;
    
    
    int [][]need=new int[CustomersNumber][ResoursesNumber];
    for(int i=0;i<CustomersNumber;i++){
        for(int j=0;j<ResoursesNumber;j++){
            
            need[i][j]=Integer.parseInt(MaxTextFiledArray[i][j].getText().toString())-AllocateArray[i][j];
            System.out.print(need[i][j]+"  ");
        }
        System.out.println();
    }
    boolean changed=false;
    int counter=0;
    for(int i=0;i<CustomersNumber;i++){
        if(!finish[i]){
            if(bank.requestResources(i, need[i])){
                bank.releaseResources(i, null);
                counter++;
                finish[i]=true;
                s+=" C"+i;
                changed=true;
            }
        }
        if(i==CustomersNumber-1){
            if(changed==true){
               i=-1;
               changed=false;
            }
            else{
                if(counter ==CustomersNumber){
                    s+="<<Safe>>";
                }
                else{
                    s += " <<UnSafe>> ";
                }
            }
        }
    }
        
    
   /* boolean finished=false;
    int counter=0;
    for(int i=0;i<CustomersNumber;i++){
        if(isDone[i]){
            counter++;
            if(counter==CustomersNumber-1){
              //  lbl_Result.setText("Safe");
                s+="  <<Safe>>";
           //     System.out.println("Safe");
                break;
            }
            else
            {
                continue;
            }
        }
        else{
            if(bank.requestResources(i, AllocateArray[i])){
                isDone[i]=true;
                bank.releaseResources(i, null);
                s+=" C"+String.valueOf(i);
                finished=true;
            }
            if(i==CustomersNumber-1){
                if(finished){ // done some changes
                    finished=false;
                    i=-1;
                    counter=0;
                }
                else{ // nothing done 
                     s+="<<UnSafe>>";
                    break;
                }
            }
        }
       
    }*/
    lbl_Result.setText(s);
    }
}
